=begin
#Ilinaya SMSFlow

#Ilinaya SMSFlow API

OpenAPI spec version: 1.0.0
Contact: all@ilinaya.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'uri'

module SwaggerClient
  class DidsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve available for purchase
    # This method allows you to get paginated output of availavle virtual numbers
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :page Specify Page number for results pagination
    # @return [AvailavleDidResponse]
    def dids_available_get(opts = {})
      data, _status_code, _headers = dids_available_get_with_http_info(opts)
      data
    end

    # Retrieve available for purchase
    # This method allows you to get paginated output of availavle virtual numbers
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :page Specify Page number for results pagination
    # @return [Array<(AvailavleDidResponse, Fixnum, Hash)>] AvailavleDidResponse data, response status code and response headers
    def dids_available_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidsApi.dids_available_get ...'
      end
      # resource path
      local_var_path = '/dids/available'

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AvailavleDidResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidsApi#dids_available_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Purchase virutal number
    # This method allows you to purchase virutal number
    # @param body Provide didId
    # @param [Hash] opts the optional parameters
    # @return [DidPurchaseResponse]
    def dids_buy_post(body, opts = {})
      data, _status_code, _headers = dids_buy_post_with_http_info(body, opts)
      data
    end

    # Purchase virutal number
    # This method allows you to purchase virutal number
    # @param body Provide didId
    # @param [Hash] opts the optional parameters
    # @return [Array<(DidPurchaseResponse, Fixnum, Hash)>] DidPurchaseResponse data, response status code and response headers
    def dids_buy_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidsApi.dids_buy_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidsApi.dids_buy_post"
      end
      # resource path
      local_var_path = '/dids/buy'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DidPurchaseResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidsApi#dids_buy_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve your virtual numbers
    # This method allows you to get paginated output of your virtual numbers
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :page Specify Page number for results pagination
    # @return [DidResponse]
    def dids_get(opts = {})
      data, _status_code, _headers = dids_get_with_http_info(opts)
      data
    end

    # Retrieve your virtual numbers
    # This method allows you to get paginated output of your virtual numbers
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :page Specify Page number for results pagination
    # @return [Array<(DidResponse, Fixnum, Hash)>] DidResponse data, response status code and response headers
    def dids_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidsApi.dids_get ...'
      end
      # resource path
      local_var_path = '/dids'

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DidResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidsApi#dids_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Set HTTP callback for inbound SMS
    # We wil forward all inbound messages to your HTTP(s) callback url
    # @param body Provide didId
    # @param [Hash] opts the optional parameters
    # @return [DidSetCallbackResponse]
    def dids_setcallback_post(body, opts = {})
      data, _status_code, _headers = dids_setcallback_post_with_http_info(body, opts)
      data
    end

    # Set HTTP callback for inbound SMS
    # We wil forward all inbound messages to your HTTP(s) callback url
    # @param body Provide didId
    # @param [Hash] opts the optional parameters
    # @return [Array<(DidSetCallbackResponse, Fixnum, Hash)>] DidSetCallbackResponse data, response status code and response headers
    def dids_setcallback_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DidsApi.dids_setcallback_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DidsApi.dids_setcallback_post"
      end
      # resource path
      local_var_path = '/dids/setcallback'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DidSetCallbackResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DidsApi#dids_setcallback_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
